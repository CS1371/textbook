<code><strong>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">% Finding arm position</font><br>
<font color="#0000ff">function</font> main<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> r1<br>
&nbsp;&nbsp;&nbsp;&nbsp;r1 = <font color="#ff8000">4</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> r2<br>
&nbsp;&nbsp;&nbsp;&nbsp;r2 = <font color="#ff8000">3</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> alpha<br>
&nbsp;&nbsp;&nbsp;&nbsp;alpha = pi/<font color="#ff8000">6</font> <font color="#00A000">% 30 deg</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;beta = linspace(-pi, pi, <font color="#ff8000">19</font>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;pf = fab(beta);<br>
&nbsp;&nbsp;&nbsp;&nbsp;zeros = find(pf(<font color="#ff8000">1</font>:end-<font color="#ff8000">1</font>) .* pf(<font color="#ff8000">2</font>:end) <= <font color="#ff8000">0</font>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;disp(<font color="#c000c0">'zeros occur just after'</font>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;beta(zeros)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">%</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;zero = findZeroAB([beta(zeros(<font color="#ff8000">1</font>)) <font color="#ff8000">...</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;beta(zeros(<font color="#ff8000">1</font>)+<font color="#ff8000">1</font>)])<br>
<font color="#0000ff">end</font><br>
<font color="#0000ff">function</font> res = fab(beta)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">% f(beta) = r1 (cos(alpha) + sin(alpha) - 1)</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">% + r2 (cos(beta) + sin(beta) - 1)</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> r1<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> r2<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">global</font> alpha<br>
&nbsp;&nbsp;&nbsp;&nbsp;res = r1 * (cos(alpha) + sin(alpha) - <font color="#ff8000">1</font>) <font color="#ff8000">...</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;+ r2 * (cos(beta) + sin(beta) - <font color="#ff8000">1</font>);<br>
<font color="#0000ff">end</font><br>
<font color="#0000ff">function</font> pt = findZeroAB(x)<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">% x is a lower-upper pair guaranteed to have</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#00A000">% y values of opposite sign</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;y = fab(x);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">if</font> abs(x(<font color="#ff8000">1</font>)-x(<font color="#ff8000">2</font>)) < <font color="#ff8000">.001</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt = [x(<font color="#ff8000">1</font>) y(<font color="#ff8000">1</font>)];<br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">else</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mx = sum(x)/<font color="#ff8000">2</font>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;my = fab(mx);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">if</font> my*y(<font color="#ff8000">1</font>) < <font color="#ff8000">0</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt = findZeroAB([x(<font color="#ff8000">1</font>) mx]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">else</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pt = findZeroAB([mx x(<font color="#ff8000">2</font>)]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">end</font><br>
&nbsp;&nbsp;&nbsp;&nbsp;<font color="#0000ff">end</font><br>
<font color="#0000ff">end</font><br>
</strong></code>
