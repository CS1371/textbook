Technical Insight 9.1
In most computer languages, user programs and functions are compiled before they can be run. Part of that compilation process is defining the variable names and data types. This allows the system processes to compute the exact size of each stack frame before the program begins to run. Since the MATLAB language is interpreted and interactive, this information is not available. Consequently, every stack frame must be dynamically sized to allow for the “surprises” inherent in this style of programming.

Technical Insight 9.2
Truthfulness requires pointing out that while computing the Fibonacci series recursively is a very nice, conceptually simple approach, it is a nightmare as far as the computational load on your processor. Do not try to compute beyond about 35 numbers in the series. An iterative solution, while less elegant, runs in linear time rather than exponential.

Technical Insight 12.1
According to the MATLAB language help system, the third way really computes (C‘\A’)’, which can only work if C is also square.
 
Technical Insight 14.1
The background theory of sampling is beyond the scope of this text. Interested readers should research Nyquist on a good search engine.
 
Technical Insight 14.2
The fact that the actual maximum frequency is half of the sampling frequency is consistent with the Nyquist criterion that the maximum frequency you can discern with digital sampling is half the sampling frequency.
 
Technical Insight 16.1
Interested readers should look up little-O, Big-V, little-v, and Big-Q.

Technical Insight 17.1
According to Wikipedia, this algorithm was developed in 1930 by Czech mathematician Vojtech Jarník and later independently by computer scientist Robert C. Prim in 1957 and rediscovered by Edsger Dijkstra in 1959. Therefore, it is also sometimes called the DJP algorithm, the Jarník algorithm, or the Prim–Jarník algorithm.
