<!DOCTYPE HTML>
<html>
<head>
<title>14_Sounds</title>
<script async src="./javascript/index.js"></script>
<!-- include bootstrap -->
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
<!-- main stylesheet -->
<link rel="stylesheet" href="styles/styles.css" />
</head>

<body>
<div><nav class="navbar navbar-expand-lg fixed-top top-nav navbar-light bg-light"><a class="navbar-brand" href="#"><img src="../Images/1371.png" width="30" height="30" class="d-inline-block align-top" alt="">&nbspEngineering Computation Using MATLAB</a></nav></div>
<div class="nav-obj"><nav class="nav sidenav nav-scroll navbar-dark bg-dark"><ul class="navbar-nav"><li class="nav-item"><a class="nav-link" href="..\..\index.html">Home</a></li><li class="nav-item"><a class="nav-link" href="Preface.htm">Preface</a></li><li class="nav-item"><div class="nav-link"><a href="01_Introduction.htm#1">1 Introduction&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_1"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_1">1.1 Background</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_2">1.2 History of Computer Architectures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_2"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_1">1.2.1 Babbage's Difference Engine</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_2">1.2.2 Colossus</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_3">1.2.3 The von Neumann Architecture</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_3">1.3 Modern Computer Software&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_3"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_1">1.3.1 Operating Systems</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_2">1.3.2 Software Tools</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_3">1.3.3 Programming Languages</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_4">1.3.4 Running a Computer Program</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_5">1.3.5 Running an Interpreted Program</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_4">1.4 Anticipated Outcomes&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_4"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_1">1.4.1 Introduction to MATLAB</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_2">1.4.2 Learning Programming Concepts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_3">1.4.3 Problem-Solving Skills</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="02_Basics.htm#2">2 Basics&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_2"><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_1">2.1 Programming Language Background&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_1"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_1">2.1.1 Abstraction</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_2">2.1.2 Algorithms</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_3">2.1.3 Programming Paradigms</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_2">2.2 Basic Data Manipulation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_2"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_1">2.2.1 Starting and Stopping MATLAB</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_2">2.2.2 Assigning Values to Variables</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_3">2.2.3 Data Typing</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_4">2.2.4 Classes and Objects</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_3">2.3 MATLAB User Interface&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_3"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_1">2.3.1 Command Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_2">2.3.2 Command History</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_3">2.3.3 Workspace Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_4">2.3.4 Current Folder Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_5">2.3.5 Variable Editor</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_6">2.3.6 Figure Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_7">2.3.7 Editor Window</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_4">2.4 Scripts&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_4"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_1">2.4.1 Text Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_2">2.4.2 Creating Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_3">2.4.3 The Current Directory</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_4">2.4.4 Running Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_5">2.4.5 Punctuating Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_6">2.4.6 Debugging Scripts</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_5">2.5 Engineering Example - Spacecraft Launch</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="03_Functions.htm#3">3 Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_3"></ul></li><li class="nav-item"><div class="nav-link"><a href="04_Vectors.htm#4">4 Vectors&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_4"></ul></li><li class="nav-item"><div class="nav-link"><a href="05_Execution.htm#5">5 Execution&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_5"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_1">5.1 Concept: Code Blocks</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_2">5.2 Conditional Execution in General</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_3">5.3 if Statements&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_3"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_1">5.3.1 General Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_2">5.3.2 MATLAB Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_3">5.3.3 Important Ideas</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_4">5.4 switch Statements&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_4"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_4_1">5.4.1 General Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_4_2">5.4.2 MATLAB Implementation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_5">5.5 Iteration in General</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_6">5.6 for Loops&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_6"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_1">5.6.1 General for Loop Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_2">5.6.2 MATLAB Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_3">5.6.3 Indexing Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_4">5.6.4 Breaking out of a for Loop</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_7">5.7 while Loops&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_7"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_1">5.7.1 General while Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_2">5.7.2 MATLAB while Loop Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_3">5.7.3 Loop-and-a-Half Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_4">5.7.4 Breaking a while Loop</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_8">5.8 Engineering Example - Computing Liquid Levels</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="06_Strings.htm#6">6 Strings&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_6"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_1">6.1 Character String Concepts: Mapping, Casting, Tokens, and Delimiting</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_2">6.2 MATLAB Implementation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_2"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_1">6.2.1 Slicing and Concatenating Strings</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_2">6.2.2 Arithmetic and Logical Operations</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_3">6.2.3 Useful Functions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_3">6.3 Format Conversion Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_3"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_3_1">6.3.1 Conversion from Numbers to Strings</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_3_2">6.3.2 Conversion from Strings to Numbers and Other Stuff</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_4">6.4 Character String Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_4"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_1">6.4.1 Simple Data Output: The disp(...) Function</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_2">6.4.2 Complex Output</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_3">6.4.3 Comparing Strings</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_5">6.5 Arrays of Strings</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_6">6.6 Engineering Example - Encryption</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="07_Structures.htm#7">7 Structures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_7"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_1">7.1 Concept: Collecting Dissimilar Objects</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_2">7.2 Cell Arrays&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_2"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_1">7.2.1 Creating Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_2">7.2.2 Accessing Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_3">7.2.3 Using Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_4">7.2.4 Processing Cell Arrays</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_3">7.3 Structures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_3"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_3_1">7.3.1 Constructing and Accessing One Structure</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_3_2">7.3.2 Constructor Functions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_4">7.4 Structure Arrays&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_4"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_1">7.4.1 Constructing Structure Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_2">7.4.2 Accessing Structure Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_3">7.4.3 Manipulating Structures</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_5">7.5 Comparing Cell Arrays to Structure Arrays</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_6">7.6 Engineering Example: Assembling a Physical Structure</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="08_File_I_O.htm#8">8 File I O&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_8" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_8"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_1">8.1 Concept: Serial Input and Output (I/O)</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_2">8.2 Workspace I/O</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3">8.3 High-Level I/O Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_8_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_8_3"><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_1">8.3.1 Exploration</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_2">8.3.2 Spreadsheets</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_3">8.3.3 Delimited Text Files</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4">8.4 Lower-Level File I/O&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_8_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_8_4"><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_1">8.4.1 Opening and Closing Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_2">8.4.2 Reading Text Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_3">8.4.3 Writing Text Files</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_5">8.5 Engineering Example - Spreadsheet Data</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="09_Recursion.htm#9">9 Recursion&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_9" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_9"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_1">9.1 Concept: The Activation Stack&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_1"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_1">9.1.1 A Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_2">9.1.2 Activation Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_3">9.1.3 Function Instances</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_2">9.2 Recursion Defined</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_3">9.3 Implementing a Recursive Function</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_4">9.4 Exceptions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_4"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_1">9.4.1 Historical Approaches</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_2">9.4.2 Generic Exception Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_3">9.4.3 MATLAB Implementation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_5">9.5 Wrapper Functions</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_6">9.6 Examples of Recursion&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_6"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_1">9.6.1 Detecting Palindromes</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_2">9.6.2 Fibonacci Series</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_3">9.6.3 Zeros of a Function</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_7">9.7 Engineering Example - Robot Arm Motion</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="10_Problem_Solving.htm#10">10 Problem Solving&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_10" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_10"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_1">10.1 Solving Simple Problems</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_2">10.2 Assembling Solution Steps</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3">10.3 Summary of Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_10_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_10_3"><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_1">10.3.1 Basic Arithmetic Operations</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_2">10.3.2 Inserting into a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_3">10.3.3 Traversing a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_4">10.3.4 Building a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_5">10.3.5 Mapping a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_6">10.3.6 Filtering a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_7">10.3.7 Folding a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_8">10.3.8 Searching a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_9">10.3.9 Sorting a Collection</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_4">10.4 Solving Larger Problems</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_5">10.5 Engineering Example - Processing Geopolitical Data</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="11_Plotting.htm#11">11 Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_11" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_11"><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_1">11.1 Plotting in General&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_1"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_1">11.1.1 A Figure - The Plot Container</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_2">11.1.2 Simple Functions for Enhancing Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_3">11.1.3 Multiple Plots on One Figure - Subplots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_4">11.1.4 Manually Editing Plots</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_2">11.2 2-D Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_2"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_1">11.2.1 Simple Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_2">11.2.2 Plot Options</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_3">11.2.3 Parametric Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_4">11.2.4 Other 2-D Plot Capabilities</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_3">11.3 3-D Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_3"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_1">11.3.1 Linear 3-D Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_2">11.3.2 Linear Parametric 3-D Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_3">11.3.3 Other 3-D Plot Capabilities</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_4">11.4 Surface Plots&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_4"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_1">11.4.1 Basic Capabilities</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_2">11.4.2 Simple Exercises</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_3">11.4.3 3-D Parametric Surfaces</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_4">11.4.4 Bodies of Rotation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_5">11.4.5 Other 3-D Surface Plot Capabilities</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_6">11.4.6 Assembling Compound Surfaces</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_5">11.5 Manipulating Plotted Data</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_6">11.6 Engineering Example - Visualizing Geographic Data&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_6"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_6_1">11.6.1 Analyzing the Data</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_6_2">11.6.2 Displaying the Data</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="12_Matrices.htm#12">12 Matrices&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_12" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_12"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_1">12.1 Concept: Behavioral Abstraction</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_2">12.2 Matrix Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_2"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_1">12.2.1 Matrix Multiplication</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_2">12.2.2 Matrix Division</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_3">12.2.3 Matrix Exponentiation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_3">12.3 Implementation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_3"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_3_1">12.3.1 Matrix Multiplication</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_3_2">12.3.2 Matrix Division</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_4">12.4 Rotating Coordinates&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_4"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_4_1">12.4.1 2-D Rotation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_4_2">12.4.2 3-D Rotation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_5">12.5 Solving Simultaneous Linear Equations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_5"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_5_1">12.5.1 Intersecting Lines</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_6">12.2 Engineering Examples&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_6"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_6_1">12.2.1 Ceramic Composition</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_6_2">12.2.2 Analyzing an Electrical Circuit</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="13_Images.htm#13">13 Images&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_13" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_13"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_1">13.1 Nature of an Image</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_2">13.2 Image Types&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_13_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_13_2"><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_1">13.2.1 True Color Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_2">13.2.2 Gray Scale Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_3">13.2.3 Color Mapped Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_4">13.2.4 Preferred Image Format</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_3">13.3 Reading, Displaying, and Writing Images</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_4">13.4 Operating on Images&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_13_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_13_4"><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_1">13.4.1 Stretching or Shrinking Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_2">13.4.2 Color Masking</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_3">13.4.3 Creating a Kaleidoscope</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_4">13.4.4 Images on a Surface</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_5">13.5 Engineering Example - Detecting Edges</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="14_Sounds.htm#14">14 Sounds&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_14" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_14"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_1">14.1 The Physics of Sound</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_2">14.2 Recording and Playback</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_3">14.3 Implementation</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_4">14.4 Time Domain Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_4"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_1">14.4.2 Slicing and Concatenating Sounds</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_2">14.4.2 Musical Background</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_3">14.4.3 Changing Sound Frequency</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_5">14.5 The Fast Fourier Transform&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_5"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_1">14.5.1 Background</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_2">14.5.2 Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_3">14.5.3 Simple Spectral Analysis</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_6">14.6 Frequency Domain Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_6"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_6_1">14.6.1 Details of the Spectral Data</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_6_2">14.6.2 Notes fading with time</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_7">14.7 Engineering Example - Music Synthesizer</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="15_Numerical_Methods.htm#15">15 Numerical Methods&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_15" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_15"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1">15.1 Interpolation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_1"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_1">15.1.1 Linear Interpolation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_2">15.1.2 Cubic Spline Interpolation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_3">15.1.3 Extrapolation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2">15.2 Curve Fitting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_2"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_1">15.2.1 Linear Regression</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_2">15.2.2 Polynomial Regression</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_3">15.2.3 Practical Application</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3">15.3 Numerical Integration&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_3"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3_1">15.3.1 Determination of the Complete Integral</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3_2">15.3.2 Continuous Integration Problems</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_4">15.4 Numerical Differentiation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_4"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_4_1">15.4.1 Difference Expressions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5">15.5 Analytical Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_5"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5_1">15.5.1 Analytical Integration</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5_2">15.5.2 Analytical Differentiation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_6">15.6 Implementation</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_7">15.7 Engineering Example - Shaping the Synthesizer Notes</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="16_Sorting.htm#16">16 Sorting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_16" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_16"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_1">16.1 Measuring Algorithm Cost</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_2">16.2 Algorithms for Sorting Data&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_16_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_16_2"><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_1">16.2.1 Insertion Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_2">16.2.2 Bubble Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_3">16.2.3 Quick Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_4">16.2.4 Merge Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_5">16.2.5 Radix Sort</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_3">16.3 Performance Analysis</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_4">16.4 Applications of Sorting Algorithms&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_16_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_16_4"><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_1">16.4.1 Using sort(...)</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_2">16.4.2 Insertion Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_3">16.4.3 Bubble Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_4">16.4.4 Quick Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_5">16.4.5 Merge Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_6">16.4.6 Radix Sort</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_5">16.5 Engineering Example - A Selection of Countries</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="17_Graphs.htm#17">17 Graphs&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_17" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_17"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_1">17.1 Stacks&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_1"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_1_1">17.1.1 The Nature of a Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_1_2">17.1.2 Implementing Stacks</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_2">17.2 Queues&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_2"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_1">17.2.1 The Nature of a Queue</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_2">17.2.2 Implementing Queues</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_3">17.2.3 Priority Queues</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#">17.3 Testing Stacks and Queues</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_4">17.4 Graphs&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_4"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_4_1">17.4.1 Graph Examples</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_4_2">17.4.2 Processing Graphs</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_5">17.5 Minimum Spanning Trees</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_6">17.6 Finding Paths through a Graph&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_6"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_1">17.6.1 Depth-First Search</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_2">17.6.2 Breadth-First Search</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_3">17.6.3 Dijkstra's Algorithm</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_4">17.6.4 An Approximation Algorithm</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_5">17.6.5 Serious Path Finding Algorithms</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_7">17.7 Engineering Applications&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_7"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_7_1">17.7.1 Simple Applications</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_7_2">17.7.2 Complex Extensions</a></div></li></ul></li></ul></li></ul></nav></div>
<div class="content">
  <h1 align="center" id="14">Chapter 14: Sounds</h1>

  <!-- Chapter Objectives -->
  <h1>Chapter Objectives</h1>
  <div class="container">
  <p>This chapter discusses the following:</p>
      <ul>
          <li>How sound is physically recorded and played back and our internal storage of sound</li>
          <li>Operations that can be performed with the original time trace</li>
          <li>The ability to transform the data into the frequency domain and the physical significance of the transformed data</li>
          <li>Operations that can be performed in the frequency domain</li>
      </ul>
  </div>

  <!--
  <h1>Introduction</h1>
   [not needed here] DMS  -->

   <div class="chp-section" data-sect-num="1" data-sect-name="The Physics of Sound">
    <!-- The Physics of Sound -->
    <h2 id="14_1">14.1	The Physics of Sound</h2>
    <div class="container">
        <p>Any sound source produces sound in the form of pressure fluctuations in the air. While the air molecules move infinitesimal distances in order to propagate the sound, the important part of sound propagation is that pressure waves move rapidly through the air by causing air molecules to “jostle” each other. These pressure fluctuations can be viewed as analog signals—data that have a continuous range of values. These signals have two attributes: their amplitude and their frequency characteristics.</p>
        <p>In absolute terms, sound is measured as the <b>amplitude</b> of pressure fluctuations on a surface like an eardrum or a microphone. However, the challenging characteristic of these data is their dynamic range. Our ears are able to detect small sounds with amplitudes around 10<sup>10</sup> (10 billion) times smaller than the loudest comfortable sound. Sound intensity is therefore usually reported logarithmically, measured in decibels where the intensity of a sound in decibels is calculated as follows:</p>
        <p><code>I<sub>DB</sub> = 10 log<sub>10</sub>(I / I<sub>0</sub>)</code></p>
        <p>where I is the measured pressure fluctuation and I<sub>0</sub> is a reference pressure usually established as the lowest pressure fluctuation a really good ear can detect, 2 x 10<sup>−4</sup> dynes/cm<sup>2</sup>.</p>
        <p>Also, sounds are pressure fluctuations at certain <b>frequencies</b>. The human ear can hear sounds as low as 50 Hz and as high as 20 kHz. Voices on the telephone sound odd because the upper frequency is limited by the telephone equipment to 4 kHz. Typically, hearing damage due to aging or exposure to excessive sound levels causes an ear to lose sensitivity to high and/or low frequencies.</p>
    </div>
  </div>

  <div class="chp-section" data-sect-num="2" data-sect-name="Recording and Playback">
     <!-- Recording and Playback -->
    <h2 id="14_2">14.2	Recording and Playback</h2>
    <div class="container clearfix">
        <div class="float-sm-right card">
            <img src="..\Images\Fig_14_1.JPG" alt="Figure 14.1" class="fig card-img">
            <p class="figure-name card-title">Figure 14.1: Recording and Playback</p>
        </div>
        <p>Early attempts at sound recording concentrated first on mechanical, and later magnetic, methods for storing and reproducing sound. The phonograph/record player depended on the motion of a needle in a groove as a cylinder or disk rotated at constant speed under the playback head. Not surprisingly, when you see the incredible dynamic range required, even the best stereos could not reproduce high-quality sound. Later, analog magnetic tape in various forms replaced the phonograph, offering less wear on the recording and better, but still limited, dynamic range. Digital recording has almost completely supplanted analog recording and will be the subject of this chapter.</p>
        <p>Of course, sound amplitude in analog form is unintelligible to a computer—it must be turned into an electrical signal by a microphone, amplified to suitable voltage levels, digitized, and stored, as shown in Figure 14.1. The key to successful digital recording and playback—whether by digital tape machines, compact disks, or computer files—is the design of the analog-to-digital (A/D) and digital-to-analog (D/A) devices. The reader should remember that this is still low-level data. Each word coming out of the A/D or going into the D/A merely represents the pressure on the microphone at a point in time.</p>
        <p>The primary parameter governing the sound quality is the recording rate—how quickly the mechanism records samples of the sound (the sampling rate). Basic sampling theory suggests that we should use a sampling rate twice the highest frequency you are interested in reproducing, usually around 20,000 samples per second for good music, 5,000 samples per second for speech.</p>
        <div class="float-sm-right card technical-insights">
            <p class="card-title">Technical Insight 14.1</p>
            <p class="card-text">The background theory of sampling is beyond the scope of this text. Interested readers should research Nyquist on a good search engine.</p>
        </div>
        <p>The other parameter, the resolution of the recorded data, has remarkably little effect on the quality of the recording to an untrained ear. The resolution is usually either 8 bits (−128 to 127) or 16 bits (−32,768 to 32767). While 8-bit resolution ought to offer very limited dynamic range, and theoretically should be used only for recording speech, in practice it results in a quality of reproduction for music that is, to an untrained ear, indistinguishable from   that   provided   by   16-bit resolution.</p>
        <p>These parameters must be stored with  any  digital  sound  recording medium and retrieved by the tools that play those sounds. To be able to play such a file, we must receive not only the data stream, but also information indicating the sample frequency, <code>Fs</code>, and the word size.</p>
    </div>
  </div>

  <div class="chp-section" data-sect-num="3" data-sect-name="Implementation">
     <!-- Implementation -->
    <h2 id="14_3">14.3	Implementation</h2>
     <!--[MAJOR REWRITE REQUIRED]-->
     <div class="container">
        <p>MATLAB offers a number of tools for reading sound files: <code>audioread(...)</code>, for example. This function returns two variables: a vector of sound values and the sampling frequency in Hz (samples per second).</p>
        <p>To play a sound file, MATLAB provides the function <code>sound(data, rate)</code> where <code>data</code> is the vector of sound values, and <code>rate</code> is the playback frequency, usually the frequency at which the sound values were recorded. We will see that the function <code>sound(...)</code> passes the data directly to the computer’s sound card, but different implementations will manage the behavior of the software that plays the sound in one of two ways.</p>
        <p><i>Blocking vs. Non-blocking:</i> "Blocking" refers to the behavior of your system after you have called the <code>sound(...)</code> function to play a sound. Blocking players will not return control to the code playing the sound until the sound has completed. This will allow only one sound to be played from an application at a time. Non-blocking players will not wait for the sound card to finish playing the sound, so multiple calls to the <code>sound(...)</code> function will overlay different sounds. You will need to experiment with your particular system to determine whether it blocks or not.</p>
    </div>
     <!--Put these online??A number of .wav files are included on the book’s Companion Web site to demonstrate many aspects of sound files.<-->
   </div>

   <div class="chp-section" data-sect-num="4" data-sect-name="Time Domain Operations">
     <!-- Time Domain Operations -->
    <h2 id="14_4">14.4	Time Domain Operations</h2>
    <div class="container">
        <p>First, we consider three kinds of operations on sound files in the time domain: slicing, playback frequency changes, and sound file frequency changes.</p>
    </div>

    <div class="chp-subsection" data-sub-num="2" data-sub-name="Slicing and Concatenating Sounds">
       <!-- Slicing and Concatenating Sound -->
      <h3 id="14_4_1">14.4.1 Slicing and Concatenating Sound</h3>
      <div class="container">
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_2.JPG" alt="Figure 14.2" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.2: Gone With the Wind Speech</p>
              </div>
              <p>Consider the problem of constructing comedic sayings by choosing and assembling words from published speeches. One example of a speech clip is "Frankly, my dear..." from <em>Gone with the Wind</em>. Listing 14.1 describes the process of assembling parts of this speech into a semi-coherent conversation.</p>
              <p>In Listing 14.1, we first read and play the sound from the "frankly, my dear..." speech; the plotted data can be seen in Figure 14.2. Then, we play it louder by increasing the amplitude and then play it softer by decreasing the amplitude. It is then played faster by dropping half the data and then played slower by reducing the playback frequency. Then, all of the speech pieces are pasted together to construct the final sound clip.</p>
          </div>
          <div class="row">
              <div class="col-sm-6">
                  <audio controls><source src="../audio/sp_givdamn2.wav" type="audio/wav" />"Frankly, my dear..." speech</audio>
                  <p class="figure-name">"Frankly, my dear..." speech</p>
              </div>
              <div class="col-sm-6">
                  <audio controls><source src="../audio/sp_bond.wav" type="audio/wav">Bond speech</audio>
                  <p class="figure-name">Bond speech</p>
              </div>
      	</div>
          <div class="row">
              <div class="col-sm-6">
                  <audio controls><source src="../audio/sp_beam.wav" type="audio/wav">Beam speech</audio>
                  <p class="figure-name">Beam Speech</p>
              </div>
              <div class="col-sm-6">
                  <audio controls><source src="../audio/speech.wav" type="audio/wav">Combined speech</audio>
                  <p class="figure-name">Combined Speech</p>
              </div>
          </div>
          <div class="listing"><iframe src="..\listings\listing_14_1_livehtml.html"></iframe></div>
      </div>
    </div>

    <div class="chp-subsection" data-sub-num="2" data-sub-name="Musical Background">
       <!-- Musical Background -->
      <h3 id="14_4_2">14.4.2	Musical Background</h3>
      <div class="container clearfix">
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_3.JPG" alt="Figure 14.3" class="fig card-img">
              <p class="figure-name card-title">Figure 14.3: Musical Notes</p>
          </div>
          <p>For good historical reasons, music is usually described graphically on a music score. The graphics describe for each note to be played its pitch and its duration, together with other notations indicating how to introduce expression and quality into the music. However, this graphical notation is not amenable to the simple representation of music we need for these experiments. Rather, we will use the representation illustrated in Figure 14.3. The right side of this figure shows a standard piano keyboard, the index of each white note, and the number of half steps necessary to achieve the pitch of each note. On the left side of the figure, we see the method to be used in this text to describe simple tunes. It will consist of an array with two columns and n rows, where n is the number of notes to be played for each tune. The first column is the key number to play, and the second column is the number of beats each note should be played.</p>
          <p>The example to follow in Listing 14.2 will manipulate the file <code>instr_piano.wav</code> to produce a snippet of music. This file is a recording of a single note played on a piano. <!--Other files provided in the Companion Web site are the same note played on a variety of instruments.--> There are two ways to accomplish this, as follows:</p>
          <ol>
           <li>Playing each note at a different playback frequency</li>
           <li>Stretching or shrinking each note to match the required note pitch and playing them all at the same playback frequency</li>
          </ol>
          <p>The first way is easier to understand and code, but very inflexible; the second method is a little more difficult to implement, but completely extensible. Musically speaking, if a sound is played at twice its natural frequency, it is heard as one musical octave higher. When you play a scale by playing each white key in turn from one note to the next octave, there are 8 keys to play with 7 frequency changes: 5 whole note steps (those separated by a black note) and 2 half note steps, for a total of 12 half note steps. These 12 half steps are logarithmically divided where the frequency multiplier between half note steps is 2<sup>1/12</sup>.</p>
          <div class="row">
            <div class="col-sm-6">
              <audio controls><source src="../audio/instr_piano.wav" type="audio/wav">Piano Note</audio>
              <p class="figure-name">Piano Note</p>
            </div>
          </div>
          <div class="listing"><iframe src="..\listings\listing_14_2_livehtml.html"></iframe></div>
          <div class="listing"><iframe src="..\Text\ramblinWreckhtml.html"></iframe></div>
      </div>
    </div>

    <div class="chp-subsection" data-sub-num="3" data-sub-name="Changing Sound Frequency">
       <!-- Changing Sound Frequency -->
      <h3 id="14_4_3">14.4.3	Changing Sound Frequency</h3>
      <div class="container clearfix">
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_4.JPG" alt="Figure 14.4" class="fig card-img">
              <p class="figure-name card-title">Figure 14.4: Creating a Tune File</p>
          </div>
          <p>We will leave as an exercise for the reader the question of playing a tune by changing the playback frequency of each note, which is really never a practical thing to do, and concentrate on playing all the notes of a tune with the same playback frequency. This allows the different notes to be copied into a single sound file and saved to be played back on any digital sound system.</p>
          <p>In order to change the perceived note frequency without changing the playback frequency, we have to change the number of data samples in the original data file much as we stretched or shrunk an image in Section 13.4.1.</p>
          <p><b>Play a Scale</b> Listing 14.2 shows a script that uses this capability to play the C Major scale (all white notes) on the piano. It repeatedly shortens the vector to increase the frequency of the note played.</p>
          <p><b>Play a Simple Tune</b> We now write a script to build a playable <code>.wav</code> file using the note shrinking technique, also shown in Listing 14.2. It reads in the script <code>ramblinWreck</code> to define the tune in which the first column of each cell array specifies the relative pitch (the note on teh scale) and the second the duration in "beats".</p>
          <p>The goal is to put the notes into a single sound array called <code>wreck</code>, as illustrated in Figure 14.4, rather than playing the notes "on the fly." For each part, or instrument, this is accomplished as follows:</p>
          <ul>
           <li>In the <code>play_part</code> function, create an empty array, <code>part</code>, of the appropriate length (the length of the original note plus the total number of beats in the song)</li>
           <li>Initialize <code>where</code> to store the first note at the start of the tune</li>
           <li>Iterate across the <code>part</code> definition array <code>score</code> with the following steps:
               <ul>
                   <li>In the <code>getPitch</code> function, start with the original <code>note</code></li>
                   <li>Get the power of the note to decide how many times to raise the note array by half a step</li>
                   <li>Raise the <code>power</code> to the right pitch and save it as <code>pitch</code></li>
                   <li>Add that <code>pitch</code> vector to the <code>part</code> vector, starting at <code>where</code></li>
                   <li>Move the <code>where</code> variable down the <code>part</code> vector a distance equivalent to the duration of that note</li>
               </ul>
           </li>
           <li>When all the parts have been added to the tune file, play the tune and save it as a <code>.wav</code> file.</li>
          </ul>
      </div>
    </div>
  </div>

  <div class="chp-section" data-sect-num="5" data-sect-name="The Fast Fourier Transform">
    <!-- The Fast Fourier Transform -->
    <h2 id="14_5">14.5  The Fast Fourier Transform</h2>
    <div class="container">
        <p>Typically, the time history display of a sound shows you the amplitude of the sound as a function of time but makes no attempt at showing the frequency content. While this works for the exercises above, we are often more interested in the frequency content of a sound file, for which we need a different presentation—a spectrum display.</p>
    </div>

    <div class="chp-subsection" data-sub-num="1" data-sub-name="Background">
       <!-- Background -->
      <h3 id="14_5_1">14.5.1 Background</h3>
      <div class="container clearfix">
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_5.JPG" alt="Figure 14.5" class="fig card-img">
              <p class="figure-name card-title">Figure 14.5: A typical spectrum display</p>
          </div>
          <p>In general, a spectrum display shows the amount of sound energy in a given frequency band throughout the duration of the sound analyzed but ignores the time at which the sound at that frequency was generated. Many acoustic amplifiers (see Figure 14.5) include two features that allow you to customize the sound output:</p>
          <ul>
           <li>A spectral display that changes values as the sound is played, indicating the amount of sound energy (vertically) in different frequency bands (horizontally)</li>
           <li>Filter controls to change the relative amplification in different frequency bands</li>
          </ul>
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_6.JPG" alt="Figure 14.6" class="fig card-img">
              <p class="figure-name card-title">Figure 14.6: Mechanics of the Fourier Transform</p>
          </div>
          <p> In the following paragraphs, we will consider only the analysis of the sound frequency content. The ability to reshape the sound frequency content as the sound plays is beyond the scope of this text.</p>
          <p>To achieve the motion of the spectrum display, software to analyze a segment of the sound file runs periodically and updates the spectrum display. Typically, perhaps 20 times a second, 1/20th second of sound file is analyzed and transformed. The software used for this conversion is known as the Fourier transform.</p>
          <p>While the mathematics of the Fourier transform is beyond the scope of this book, we can make use of the tools it offers without concerning ourselves with the details. There are a number of implementations of this transform; perhaps the most commonly used is the Fast Fourier Transform (FFT).  The  FFT  uses  clever  matrix  manipulations  to  optimize  the algorithm needed to generate the forward (time to frequency) and reverse (frequency to time) transforms.</p>
      </div>
    </div>

    <div class="chp-subsection" data-sub-num="2" data-sub-name="Implementation">
       <!-- Implementation -->
      <h3 id="14_5_2">14.5.2	Implementation</h3>
      <div class="container clearfix">
          <p>Figure 14.6 illustrates the overall process of transforming between the time domain and frequency domain. It starts with a simple sound file, a vector of N sound values in the range (−1.0 to 1.0), which, if played back at a sample frequency <code>Fs</code> samples per second, reproduces the sound. The parameters of interest for characterizing the time trace are:</p>
          <table class="table">
           <tr>
               <td><code>N</code></td>
               <td>the number of samples</td>
           </tr>
           <tr>
               <td><code>F<sub>s</sub></code></td>
               <td>the sampling frequency</td>
           </tr>
           <tr>
               <td><code>&Delta;t</code></td>
               <td>the time between samples, computed as <code>1/Fs</code></td>
           </tr>
           <tr>
               <td><code>T<sub>max</sub></code></td>
               <td>the maximum time is N x &Delta;t</td>
           </tr>
          </table>
          <p>The FFT consumes a file describing the time history of the sound sampled at regular intervals &Delta;t and produces a frequency spectrum with a corresponding set of characteristics. The frequency spectrum consists of the same number, <code>N</code>, of data points, each of which is a complex value with real and imaginary parts. (While many displays actually plot the magnitude of the spectrum values, to accomplish the inverse transform, the complex values must be retained.) The frequency values are "folded" on the plot so that zero frequency occurs at either end of the spectrum, and the maximum frequency occurs in the middle, at spectrum data point <code>N/2</code>.</p>
          <p>The equivalent characteristics for the spectrum data are as follows:</p>
          <table class="table">
           <tr>
               <td><code>N</code></td>
               <td>the number of samples</td>
           </tr>
           <tr>
               <td><code>&Delta;f</code></td>
               <td>the frequency difference between samples, computed as <code>1/T<sub>max</sub></code></td>
           </tr>
           <tr>
               <td><code>F<sub>max</sub></code></td>
               <td>the frequency value at the end of the plot, is <code>N x &Delta;f</code> However, since the mathematics force this frequency to actually replicate the beginning frequency, the maximum effective frequency actually occurs at the mid-point with value <code>F<sub>max</sub>/2</code>.</td>
           </tr>
          </table>
          <div class="float-sm-right card technical-insights">
              <p class="card-title">Technical Insight 14.2</p>
              <p class="card-text">The fact that the actual maximum frequency is half of the sampling frequency is consistent with the Nyquist criterion that the maximum frequency you can discern with digital sampling is half the sampling frequency.</p>
          </div>
          <p>The FFT is mechanized using the function <code>fft(...)</code>, which consumes the time history and produces the complex spectrum file. The inverse FFT  function, <code>ifft(...)</code>,  takes  a spectrum array and reconstructs the time history. This pair of functions provides a powerful set of tools for manipulating sound files.</p>
      </div>
    </div>

    <div class="chp-subsection" data-sub-num="3" data-sub-name="Simple Spectral Analysis">
       <!-- Simple Spectral Analysis -->
      <h3 id="14_5_3">14.5.3	Simple Spectral Analysis</h3>
      <div class="container clearfix">
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_7.JPG" alt="Figure 14.7" class="fig card-img">
              <p class="figure-name card-title">Figure 14.7: FFT of a sine wave</p>
          </div>
          <p>Listing 14.3 illustrates a script that creates 10 seconds of an 8 Hz sine wave, plots the first second of it, performs the FFT, and plots the real and imaginary parts of the spectrum. Notice the following:</p>
          <ul>
           <li>A sine wave in the time domain transforms to a line in the frequency domain because all its energy is concentrated at that frequency—8 Hz in this example.</li>
           <li>Since the FFT is a linear process, multiple sine or cosine waves added together at different frequencies have additive effects in the spectrum.</li>
           <li>The resulting spectrum is complex (with real and imaginary parts) and symmetrical about its center, the point of maximum frequency. On the plot, of course, one cannot make the frequency axis labels reduce from the center to the end.</li>
           <li>The real part of the spectrum is mirrored about the center; the imaginary part is mirrored and inverted (the complex conjugate of the original data).</li>
           <li>The phase of the complex spectrum retains the position of the sine wave in the time domain—it would be totally real for a cosine wave symmetrically placed in time and totally imaginary for a sine wave in the same relationship.</li>
          </ul>
          <p>The script in Listing 14.3 creates three sub-plots: the original sine wave and then the amplitude and phase of the spectrum.</p>
          <p>Figure 14.7 shows the result from running this script. It confirms the earlier statement that the real part of the spectrum is mirrored about the center frequency, and the imaginary part is mirrored and inverted.</p>
          <div class="listing"><iframe src="..\listings\listing_14_3_livehtml.html"></iframe></div>
      </div>
    </div>
  </div>

  <div class="chp-section" data-sect-num="6" data-sect-name="Frequency Domain Operations">
     <!-- Frequency Domain Operations -->
    <h2 id="14_6">14.6  Frequency Domain Operations</h2>
    <div class="container">
      <p>This section is intended to set up the process of building a synthesizer that will replicate with a reasonable level of fidelity the sound of a piano without resorting, as we did above, to reading and manipulating a piano time history. To do this, we must understand the basics of the frequency spectrum of the instrument and shaping its time history.</p>
    	<p>As a typical example of operating in the frequency domain, we will consider analyzing the spectral quality of different musical instruments. The intent of this section is to develop a plot showing the spectra of a selection of different musical instruments. <!--We will first build a function that plots the spectrum for a single instrument and then build the script to create all the plots.--> Listing 14.4 shows a function that reads the .wav file of an instrument. The author is deeply indebted to the University of Miami's Audio and Signal Processing Laboratory who gave permission to use their musical instrument sound collection.  This provided us with a series of sound traces recording different instruments.  All were recorded in a quiet room playing the same musical note giving us clean, pure recordings of a large number of instruments. http://chronos.ece.miami.edu/~dasp/samples/samples.html. <!--All the instruments are carefully playing a note at about 260 Hz.--></p>
      <div class="row">
          <div class="col-sm-6">
              <audio controls><source src="../audio/instr_violin.wav" type="audio/wav">Violin Frequency Spectrum</audio>
              <p class="figure-name">Violin Frequency Spectrum</p>
          </div>
          <div class="col-sm-6">
              <audio controls><source src="../audio/instr_tpt.wav" type="audio/wav">Trumpet Frequency Spectrum</audio>
              <p class="figure-name">Trumpet Frequency Spectrum</p>
          </div>
      </div>
      <div class="row">
        <div class="col-sm-6">
            <audio controls><source src="../audio/trainwhistle.wav" type="audio/wav">Train Whistle Frequency Spectrum</audio>
            <p class="figure-name">Train Whistle Frequency Spectrum</p>
        </div>
      </div>
      <div class="container clearfix">
          <div class="float-sm-right card">
              <img src="..\Images\Fig_14_8.JPG" alt="Figure 14.8" class="fig card-img">
              <p class="figure-name card-title">Figure 14.8: Instrument Spectra</p>
          </div>
          <p>The results are shown in Figure 14.8. It is interesting to notice the following:</p>
          <ul>
            <li>None of the instruments produce a pure tone. The lowest frequency at which there is energy is usually called the fundamental frequency, and successive peaks to the right at multiples of the fundamental frequency are referred to, for example, as the first, second, and third harmonics.</li>
            <li>Several instruments have much more energy in the harmonics than in the fundamental frequency.</li>
            <li>"Families" of instruments have similar spectral shapes—the strings, for example, have strong fundamental and second harmonic energy. In principle, these characteristic spectral "signatures" can be used to synthesize the sound of instruments, and even to identify individual instruments when played in groups.</li>
          </ul>
      </div>
      <div class="listing"><iframe src="..\listings\listing_14_4_livehtml.html"></iframe></div>
    </div>

      <div class="chp-subsection" data-sub-num="1" data-sub-name="Details of the Spectral Data">
      <h3 id="14_6_1">14.6.1 Details of the Spectral Data</h3>
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_9.JPG" alt="Figure 14.9" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.9: Instrument Spectra</p>
              </div>
              <p>We will now look carefully at the characteristics of the Frequency Spectrum using the code in Listing 14.5.  The first view we create is the spectrum plot of a sine wave at 261.6 Hz which musicians would recognize as Middle C.  Since all the sound energy is at that one frequency, the spectrum is a vertical line at 261.6 Hz.  The scaling on the vertical axis is complicated and irrelevant to this discussion. Consider the vertical axis to show the relative amounts of energy as a function of frequency. Note that the FFT function is assuming that the sound being analyzed is the sum of a number of sine waves at different frequencies.  The task of the FFT is to separate out and display the sound energy at each frequency.  In this example, there is only one frequency.</p>
          </div>
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_10.JPG" alt="Figure 14.10" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.10: Spectrum of a trumpet</p>
              </div>
              <p>In this next example, we will plot the absolute values of the frequency spectrum of a trumpet playing the same note at 261.6 Hz. Notice some interesting characteristics of this spectrum:
          		<ul>
            		<li>There is some energy at 261.6 Hz (normally called the "fundamental frequency" - the note intended to to be played by the musician.)  </li>
            		<li>However, the bulk of the sound energy is at higher frequencies.</li>
            		<li>"Musical" sounds in general are composed of energy at the fundamental frequency combined with energy at integer multipliers of the fundamental frequency referred to as the "harmonics." Contrast this with the "dirty" looking frequency spectrum of the train whistle in Figure 14.8 that is not normally classed as "musical"</li>
                <li>		Notice with the trumpet that the maximum energy is in the 4th harmonic and the first ten harmonics all have more energy than the fundamental.  This gives the trumpet its "brilliant" sound.</li>
          		</ul></p>
          </div>
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_11.JPG" alt="Figure 14.11" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.11: The Spectrum is actually complex</p>
              </div>
              <p>In this next example, we will plot the real and imaginary parts of the same trumpet frequency spectrum. Notice that the physical mechanics of the shape of the trumpet has created frequency spectrum values that are "out of phase" with other spectrum values.  We will not really be concerned with this except to observe that we need to reproduce the phase as well as the magnitude of the energy if we are to produce a faithful reproduction of the spectrum of an instrument.</p>
          </div>
          <div class="listing"><iframe src="..\listings\listing_14_5_livehtml.html"></iframe></div>
        </div>

        <div class="chp-subsection" data-sub-num="2" data-sub-name="Notes fading with time">
          <h3 id="14_6_2">14.6.2 Notes fading with time</h3>
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_12.JPG" alt="Figure 14.12" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.12: trumpet time history</p>
              </div>
              <p>Many instruments have a relatively constant amplitude when played.  For example, a trumpet's amplitude is controlled by the musician's breath, and could be assumed to be constant over the duration of the note as illustrated in Figure 14.12. If this is the case, everything necessary to make a synthesizer has been accomplished. Listing 14.6 was used to generate this figure, together with the frequency spectrum not repeated here.</p>
          </div>
          <div class="listing"><iframe src="..\listings\listing_14_6_livehtml.html"></iframe></div>
          <div class="container clearfix">
              <div class="float-sm-right card">
                  <img src="..\Images\Fig_14_13.JPG" alt="Figure 14.13" class="fig card-img">
                  <p class="figure-name card-title">Figure 14.13: piano time history</p>
              </div>
              <p>Some instruments, however, are played by striking a string, for example, and the allowing the reverberation of the sound to continue, gradually fading over time.  Figure 14.13 illustrates the changes over time when a piano note is played. In order to apply a profile over time to our synthetic piano note, we need to reach ahead to Chapter 15 to use curve fitting to model the shape of the sound decay.  We will merely report the general steps here and refer the reader to section 15.2 for the details.
              <ul>
                <li>In general, we need first to define some data points shown as red plus signs that define the decay.</li>
                <li>We then use the tools of chapter 15 to compute a small number of coefficients that force a polynomial curve to best fit these data points shown as the cyan colored curve.  </li>
                <li>Finally, we generate that curve and multiply the sound at each sample point by the interpolated value of that curve.</li>
              </ul>
            </p>
          </div>
          <div class="listing"><iframe src="..\listings\listing_14_7_livehtml.html"></iframe></div>
        </div>
      </div>


    <div class="chp-section" data-sect-num="7" data-sect-name="Engineering Example - Music Synthesizer">
       <!-- Engineering Example -->
      <h2 id="14_7">14.7 Engineering Example—Music Synthesizer</h2>
      <div class="container">
          <p>A music synthesizer is an electronic instrument with a piano style keyboard that is able to simulate the sound of multiple instruments. Unlike the instrument sounds we have used so far, the instrument sounds are not stored as large time histories. Rather, they are stored as the Fourier coefficients  similar to those illustrated in Figure 14.11. The sound is then reconstructed by multiplying sin or cosine waves of the right frequency by the stored coefficients. For some instruments, this is sufficient. Other instruments such as pianos need to have the amplitude of the resulting sound modified to match a typical profile. Listings 14.8 illustrates a possible technique for extracting the most important Fourier coefficients from the piano sound. We would then apply the fading curve created in section 14.6.2 above to each note and create the music from the individual notes.</p>
          <div class="listing"><iframe src="..\listings\listing_14_8_livehtml.html"></iframe></div>
          <div class="row">
              <div class="col-sm-6">
                  <audio controls><source src="..\audio\humoresque_1.wav" type="audio/wav">Anton Dvorak: "Humoresque"</audio>
                  <p class="figure-name">Anton Dvorak: "Humoresque"</p>
              </div>
          </div>
      </div>
    </div>

  <!-- Chapter Summary -->
  <h2>Chapter Summary</h2>
  <div class="container">
      <p>This chapter presented the following:</p>
      <ul>
          <li>Sounds are read with specific readers that provide a time history and sampling frequency</p>
          <li>Sounds can be played through the computer’s sound system and saved to disk as a sound file ready for playing on any digital player</li>
          <li>We can slice and concatenate sounds to edit speeches and change the frequency of the sound to change its pitch</li>
          <li>We can analyze the frequency content of sound using the Fast Fourier Transform (FFT)</li>
          <li>We can modify the spectra by adding, deleting, or changing the sound levels at chosen frequencies under certain controlled conditions</li>
          <li>We can reconstruct a sound from the FFT coefficients.</li>
      </ul>
  </div>

  <!--[Special Characters]

  [Problems]-->


</div>

</body>
</html>
