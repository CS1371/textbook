<!DOCTYPE HTML>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
  <link rel="stylesheet" href="styles/styles.css" />
  <script async src="./javascript/index.js"></script>
<title>Appendix A</title>
</head>
<body>
<div><nav class="navbar navbar-expand-lg fixed-top top-nav navbar-light bg-light"><a class="navbar-brand" href="#"><img src="../Images/1371.png" width="30" height="30" class="d-inline-block align-top" alt="">&nbspEngineering Computation Using MATLAB</a></nav></div>
<div class="nav-obj"><nav class="nav sidenav nav-scroll navbar-dark bg-dark"><ul class="navbar-nav"><li class="nav-item"><a class="nav-link" href="..\..\index.html">Home</a></li><li class="nav-item"><a class="nav-link" href="Preface.htm">Preface</a></li><li class="nav-item"><div class="nav-link"><a href="01_Introduction.htm#1">1 Introduction&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_1"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_1">1.1 Background</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_2">1.2 History of Computer Architectures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_2"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_1">1.2.1 Babbage's Difference Engine</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_2">1.2.2 Colossus</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_2_3">1.2.3 The von Neumann Architecture</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_3">1.3 Modern Computer Software&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_3"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_1">1.3.1 Operating Systems</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_2">1.3.2 Software Tools</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_3">1.3.3 Programming Languages</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_4">1.3.4 Running a Computer Program</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_3_5">1.3.5 Running an Interpreted Program</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="01_Introduction.htm#1_4">1.4 Anticipated Outcomes&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_1_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_1_4"><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_1">1.4.1 Introduction to MATLAB</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_2">1.4.2 Learning Programming Concepts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="01_Introduction.htm#1_4_3">1.4.3 Problem-Solving Skills</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="02_Basics.htm#2">2 Basics&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_2"><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_1">2.1 Programming Language Background&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_1"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_1">2.1.1 Abstraction</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_2">2.1.2 Algorithms</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_1_3">2.1.3 Programming Paradigms</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_2">2.2 Basic Data Manipulation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_2"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_1">2.2.1 Starting and Stopping MATLAB</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_2">2.2.2 Assigning Values to Variables</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_3">2.2.3 Data Typing</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_2_4">2.2.4 Classes and Objects</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_3">2.3 MATLAB User Interface&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_3"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_1">2.3.1 Command Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_2">2.3.2 Command History</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_3">2.3.3 Workspace Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_4">2.3.4 Current Folder Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_5">2.3.5 Variable Editor</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_6">2.3.6 Figure Window</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_3_7">2.3.7 Editor Window</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_4">2.4 Scripts&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_2_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_2_4"><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_1">2.4.1 Text Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_2">2.4.2 Creating Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_3">2.4.3 The Current Directory</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_4">2.4.4 Running Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_5">2.4.5 Punctuating Scripts</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="02_Basics.htm#2_4_6">2.4.6 Debugging Scripts</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="02_Basics.htm#2_5">2.5 Engineering Example - Spacecraft Launch</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="03_Functions.htm#3">3 Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_3"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="03_Functions.htm#3_1">3.1 Concepts: Abstraction and Encapsulation</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="03_Functions.htm#3_2">3.2 Black Box View of a Function</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="03_Functions.htm#3_3">3.3 MATLAB Implementation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_3_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_3_3"><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_1">3.3.1 General Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_2">3.3.1 Function Definition</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_3">3.3.3 Storing and Using Functions</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_4">3.3.4 Calling Functions</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_5">3.3.5 Variable Number of Parameters</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_6">3.3.6 Returning Multiple Results</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_7">3.3.7 Auxiliary Local Functions</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_8">3.3.8 Encapsulation in MATLAB Functions</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="03_Functions.htm#3_3_9">3.3.9 Global Variables</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="03_Functions.htm#3_4">3.4 Engineering Example: Measuring a Solid Object</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="04_Vectors.htm#4">4 Vectors&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_4"><li class="nav-item secnav"><div class="nav-link"><a href="04_Vectors.htm#4_1">4.1 Concept: Data Collection&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_4_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_4_1"><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_1_1">4.1.1 Data Abstraction</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_1_2">4.1.2 Homogeneous Collections</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="04_Vectors.htm#4_2">4.2 Vectors&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_4_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_4_2"><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_2_1">4.2.2 Creating a Vector</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_2_2">4.2.2 Size of a Vector</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_2_3">4.2.3 Indexing a Vector</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_2_4">4.2.4 Shortening a Vector</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_2_5">4.2.5 Operating on Vectors</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="04_Vectors.htm#4_3">4.3 Engineering Example - Forces and Moments</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="04_Vectors.htm#4_4">4.4 Arrays&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_4_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_4_4"><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_4_1">4.4.1 Properties of an Array</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_4_2">4.4.2 Creating an Array</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_4_3">4.4.3 Accessing Elements of an Array</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_4_4">4.4.4 Removing Elements of an Array</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="04_Vectors.htm#4_4_5">4.4.5 Operating on Arrays</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="04_Vectors.htm#4_5">4.5 Engineering Example - Computing Soil Volume</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="05_Execution.htm#5">5 Execution&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_5"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_1">5.1 Concept: Code Blocks</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_2">5.2 Conditional Execution in General</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_3">5.3 if Statements&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_3"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_1">5.3.1 General Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_2">5.3.2 MATLAB Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_3_3">5.3.3 Important Ideas</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_4">5.4 switch Statements&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_4"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_4_1">5.4.1 General Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_4_2">5.4.2 MATLAB Implementation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_5">5.5 Iteration in General</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_6">5.6 for Loops&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_6"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_1">5.6.1 General for Loop Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_2">5.6.2 MATLAB Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_3">5.6.3 Indexing Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_6_4">5.6.4 Breaking out of a for Loop</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_7">5.7 while Loops&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_5_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_5_7"><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_1">5.7.1 General while Template</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_2">5.7.2 MATLAB while Loop Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_3">5.7.3 Loop-and-a-Half Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="05_Execution.htm#5_7_4">5.7.4 Breaking a while Loop</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="05_Execution.htm#5_8">5.8 Engineering Example - Computing Liquid Levels</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="06_Strings.htm#6">6 Strings&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_6"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_1">6.1 Character String Concepts: Mapping, Casting, Tokens, and Delimiting</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_2">6.2 MATLAB Implementation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_2"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_1">6.2.1 Slicing and Concatenating Strings</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_2">6.2.2 Arithmetic and Logical Operations</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_2_3">6.2.3 Useful Functions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_3">6.3 Format Conversion Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_3"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_3_1">6.3.1 Conversion from Numbers to Strings</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_3_2">6.3.2 Conversion from Strings to Numbers and Other Stuff</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_4">6.4 Character String Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_6_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_6_4"><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_1">6.4.1 Simple Data Output: The disp(...) Function</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_2">6.4.2 Complex Output</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="06_Strings.htm#6_4_3">6.4.3 Comparing Strings</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_5">6.5 Arrays of Strings</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="06_Strings.htm#6_6">6.6 Engineering Example - Encryption</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="07_Structures.htm#7">7 Structures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_7"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_1">7.1 Concept: Collecting Dissimilar Objects</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_2">7.2 Cell Arrays&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_2"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_1">7.2.1 Creating Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_2">7.2.2 Accessing Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_3">7.2.3 Using Cell Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_2_4">7.2.4 Processing Cell Arrays</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_3">7.3 Structures&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_3"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_3_1">7.3.1 Constructing and Accessing One Structure</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_3_2">7.3.2 Constructor Functions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_4">7.4 Structure Arrays&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_7_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_7_4"><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_1">7.4.1 Constructing Structure Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_2">7.4.2 Accessing Structure Arrays</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="07_Structures.htm#7_4_3">7.4.3 Manipulating Structures</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_5">7.5 Comparing Cell Arrays to Structure Arrays</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="07_Structures.htm#7_6">7.6 Engineering Example: Assembling a Physical Structure</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="08_File_I_O.htm#8">8 File I O&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_8" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_8"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_1">8.1 Concept: Serial Input and Output (I/O)</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_2">8.2 Workspace I/O</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3">8.3 High-Level I/O Functions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_8_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_8_3"><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_1">8.3.1 Exploration</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_2">8.3.2 Spreadsheets</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_3_3">8.3.3 Delimited Text Files</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4">8.4 Lower-Level File I/O&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_8_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_8_4"><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_1">8.4.1 Opening and Closing Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_2">8.4.2 Reading Text Files</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="08_File_I_O.htm#8_4_3">8.4.3 Writing Text Files</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="08_File_I_O.htm#8_5">8.5 Engineering Example - Spreadsheet Data</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="09_Recursion.htm#9">9 Recursion&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_9" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_9"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_1">9.1 Concept: The Activation Stack&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_1"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_1">9.1.1 A Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_2">9.1.2 Activation Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_1_3">9.1.3 Function Instances</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_2">9.2 Recursion Defined</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_3">9.3 Implementing a Recursive Function</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_4">9.4 Exceptions&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_4"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_1">9.4.1 Historical Approaches</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_2">9.4.2 Generic Exception Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_4_3">9.4.3 MATLAB Implementation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_5">9.5 Wrapper Functions</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_6">9.6 Examples of Recursion&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_9_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_9_6"><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_1">9.6.1 Detecting Palindromes</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_2">9.6.2 Fibonacci Series</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="09_Recursion.htm#9_6_3">9.6.3 Zeros of a Function</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="09_Recursion.htm#9_7">9.7 Engineering Example - Robot Arm Motion</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="10_Problem_Solving.htm#10">10 Problem Solving&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_10" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_10"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_1">10.1 Solving Simple Problems</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_2">10.2 Assembling Solution Steps</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3">10.3 Summary of Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_10_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_10_3"><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_1">10.3.1 Basic Arithmetic Operations</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_2">10.3.2 Inserting into a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_3">10.3.3 Traversing a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_4">10.3.4 Building a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_5">10.3.5 Mapping a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_6">10.3.6 Filtering a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_7">10.3.7 Folding a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_8">10.3.8 Searching a Collection</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_3_9">10.3.9 Sorting a Collection</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_4">10.4 Solving Larger Problems</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="10_Problem_Solving.htm#10_5">10.5 Engineering Example - Processing Geopolitical Data</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="11_Plotting.htm#11">11 Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_11" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_11"><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_1">11.1 Plotting in General&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_1"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_1">11.1.1 A Figure - The Plot Container</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_2">11.1.2 Simple Functions for Enhancing Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_3">11.1.3 Multiple Plots on One Figure - Subplots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_1_4">11.1.4 Manually Editing Plots</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_2">11.2 2-D Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_2"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_1">11.2.1 Simple Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_2">11.2.2 Plot Options</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_3">11.2.3 Parametric Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_2_4">11.2.4 Other 2-D Plot Capabilities</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_3">11.3 3-D Plotting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_3"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_1">11.3.1 Linear 3-D Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_2">11.3.2 Linear Parametric 3-D Plots</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_3_3">11.3.3 Other 3-D Plot Capabilities</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_4">11.4 Surface Plots&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_4"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_1">11.4.1 Basic Capabilities</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_2">11.4.2 Simple Exercises</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_3">11.4.3 3-D Parametric Surfaces</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_4">11.4.4 Bodies of Rotation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_5">11.4.5 Other 3-D Surface Plot Capabilities</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_4_6">11.4.6 Assembling Compound Surfaces</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_5">11.5 Manipulating Plotted Data</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="11_Plotting.htm#11_6">11.6 Engineering Example - Visualizing Geographic Data&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_11_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_11_6"><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_6_1">11.6.1 Analyzing the Data</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="11_Plotting.htm#11_6_2">11.6.2 Displaying the Data</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="12_Matrices.htm#12">12 Matrices&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_12" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_12"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_1">12.1 Concept: Behavioral Abstraction</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_2">12.2 Matrix Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_2"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_1">12.2.1 Matrix Multiplication</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_2">12.2.2 Matrix Division</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_2_3">12.2.3 Matrix Exponentiation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_3">12.3 Implementation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_3"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_3_1">12.3.1 Matrix Multiplication</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_3_2">12.3.2 Matrix Division</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_4">12.4 Rotating Coordinates&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_4"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_4_1">12.4.1 2-D Rotation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_4_2">12.4.2 3-D Rotation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_5">12.5 Solving Simultaneous Linear Equations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_5"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_5_1">12.5.1 Intersecting Lines</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="12_Matrices.htm#12_6">12.2 Engineering Examples&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_12_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_12_6"><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_6_1">12.2.1 Ceramic Composition</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="12_Matrices.htm#12_6_2">12.2.2 Analyzing an Electrical Circuit</a></div></li></ul></li></ul></li><li class="nav-item"><div class="nav-link"><a href="13_Images.htm#13">13 Images&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_13" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_13"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_1">13.1 Nature of an Image</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_2">13.2 Image Types&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_13_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_13_2"><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_1">13.2.1 True Color Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_2">13.2.2 Gray Scale Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_3">13.2.3 Color Mapped Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_2_4">13.2.4 Preferred Image Format</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_3">13.3 Reading, Displaying, and Writing Images</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_4">13.4 Operating on Images&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_13_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_13_4"><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_1">13.4.1 Stretching or Shrinking Images</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_2">13.4.2 Color Masking</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_3">13.4.3 Creating a Kaleidoscope</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="13_Images.htm#13_4_4">13.4.4 Images on a Surface</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="13_Images.htm#13_5">13.5 Engineering Example - Detecting Edges</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="14_Sounds.htm#14">14 Sounds&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_14" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_14"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_1">14.1 The Physics of Sound</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_2">14.2 Recording and Playback</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_3">14.3 Implementation</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_4">14.4 Time Domain Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_4"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_1">14.4.2 Slicing and Concatenating Sounds</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_2">14.4.2 Musical Background</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_4_3">14.4.3 Changing Sound Frequency</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_5">14.5 The Fast Fourier Transform&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_5"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_1">14.5.1 Background</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_2">14.5.2 Implementation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_5_3">14.5.3 Simple Spectral Analysis</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_6">14.6 Frequency Domain Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_14_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_14_6"><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_6_1">14.6.1 Details of the Spectral Data</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="14_Sounds.htm#14_6_2">14.6.2 Notes fading with time</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="14_Sounds.htm#14_7">14.7 Engineering Example - Music Synthesizer</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="15_Numerical_Methods.htm#15">15 Numerical Methods&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_15" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_15"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1">15.1 Interpolation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_1"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_1">15.1.1 Linear Interpolation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_2">15.1.2 Cubic Spline Interpolation</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_1_3">15.1.3 Extrapolation</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2">15.2 Curve Fitting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_2"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_1">15.2.1 Linear Regression</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_2">15.2.2 Polynomial Regression</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_2_3">15.2.3 Practical Application</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3">15.3 Numerical Integration&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_3" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_3"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3_1">15.3.1 Determination of the Complete Integral</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_3_2">15.3.2 Continuous Integration Problems</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_4">15.4 Numerical Differentiation&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_4"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_4_1">15.4.1 Difference Expressions</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5">15.5 Analytical Operations&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_15_5" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_15_5"><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5_1">15.5.1 Analytical Integration</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_5_2">15.5.2 Analytical Differentiation</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_6">15.6 Implementation</a></div></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="15_Numerical_Methods.htm#15_7">15.7 Engineering Example - Shaping the Synthesizer Notes</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="16_Sorting.htm#16">16 Sorting&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_16" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_16"><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_1">16.1 Measuring Algorithm Cost</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_2">16.2 Algorithms for Sorting Data&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_16_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_16_2"><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_1">16.2.1 Insertion Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_2">16.2.2 Bubble Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_3">16.2.3 Quick Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_4">16.2.4 Merge Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_2_5">16.2.5 Radix Sort</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_3">16.3 Performance Analysis</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_4">16.4 Applications of Sorting Algorithms&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_16_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_16_4"><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_1">16.4.1 Using sort(...)</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_2">16.4.2 Insertion Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_3">16.4.3 Bubble Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_4">16.4.4 Quick Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_5">16.4.5 Merge Sort</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="16_Sorting.htm#16_4_6">16.4.6 Radix Sort</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="16_Sorting.htm#16_5">16.5 Engineering Example - A Selection of Countries</a></div></li></ul></li><li class="nav-item"><div class="nav-link"><a href="17_Graphs.htm#17">17 Graphs&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sec_17" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sec_17"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_1">17.1 Stacks&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_1" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_1"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_1_1">17.1.1 The Nature of a Stack</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_1_2">17.1.2 Implementing Stacks</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_2">17.2 Queues&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_2" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_2"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_1">17.2.1 The Nature of a Queue</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_2">17.2.2 Implementing Queues</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_2_3">17.2.3 Priority Queues</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#">17.3 Testing Stacks and Queues</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_4">17.4 Graphs&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_4" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_4"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_4_1">17.4.1 Graph Examples</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_4_2">17.4.2 Processing Graphs</a></div></li></ul></li><li class="nav-item secnav"><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_5">17.5 Minimum Spanning Trees</a></div></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_6">17.6 Finding Paths through a Graph&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_6" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_6"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_1">17.6.1 Depth-First Search</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_2">17.6.2 Breadth-First Search</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_3">17.6.3 Dijkstras Algorithm</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_4">17.6.4 An Approximation Algorithm</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_6_5">17.6.5 Serious Path Finding Algorithms</a></div></li></ul></li><li class="nav-item secnav"><div class="nav-link"><a href="17_Graphs.htm#17_7">17.7 Engineering Applications&nbsp;&nbsp;</a><span class="dropdown-toggle" data-target="#sub_17_7" data-toggle="collapse"></span></div><ul class="list-unstyled collapse" id="sub_17_7"><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_7_1">17.7.1 Simple Applications</a></div></li><li class="nav-item subnav"><div class="nav-link"><a href="17_Graphs.htm#17_7_2">17.7.2 Complex Extensions</a></div></li></ul></li></ul></li><li class="nav-item"><a class="nav-link" href="Appendix_A.htm">Appendix A</a></li><li class="nav-item"><a class="nav-link" href="Appendix_B.htm">Appendix B</a></li><li class="nav-item"><a class="nav-link" href="Appendix_C.htm">Appendix C</a></li><li class="nav-item"><a class="nav-link" href="Appendix_D.htm">Appendix D</a></li><li class="nav-item"><a class="nav-link" href="text_index.htm">Index</a></li></ul></nav></div>

<div class="content">
  <h1 align="center" id="1">Appendix A - Special Characters and Reserved Words</h1>
<p>This appendix collects MATLAB<a id="7472">!</a> special characters, reserved words and functions grouping them by function<a id="7418">!</a>.</p>
<table>
<tr>
  <th style="width="250 pixels">Special Characters</th>
  <th>Description</th>
</r>
<tr><td ID="201">&lt;...&gt;</td><td>Used to indicate template parameters<a id="7501">!</a> - data to be supplied</td></tr>
<tr><td ID="202">%</td><td>Indicates a comment in an m-file</td></tr>
<tr><td ID="203">{...}</td><td>Defines a cell<a id="7313">!</a> array<a id="7285">!</a></td></tr>
<tr><td ID="204">[ ]</td><td>The empty<a id="7357">!</a> vector</td></tr>
<tr><td ID="205">[...]</td><td>Concatenates data, vectors<a id="7594">!</a>, and arrays</td></tr>
<tr><td ID="206">( )</td><td>Used to override operator precedence</td></tr>
<tr><td ID="207">( )</td><td>Used to identify the formal<a id="7410">!</a> and actual<a id="7281">!</a> parameters<a id="7502">!</a> of a function<a id="7419">!</a></td></tr>
<tr><td ID="208">(...)</td><td>Used to index an array<a id="7286">!</a></td></tr>
<tr><td ID="209">(&lt;variable<a id="7587">!</a>&gt;)</td><td>Used to allow a variable<a id="7588">!</a> to be used as a structure<a id="7538">!</a> field<a id="7385">!</a></td></tr>
<tr><td ID="210">'abc'</td><td>Encloses a literal character<a id="7320">!</a> string</td></tr>
<tr><td>'</td><td>Transposes an array<a id="7287">!</a></td></tr>
<tr><td ID="211">;</td><td>Suppresses output when after an assignment<a id="7304">!</a> statement (explicit or implied) </td></tr>
<tr><td ID="212">;</td><td>Separates rows in an array<a id="7288">!</a> definition</td></tr>
<tr><td ID="213">:</td><td>Specifies a vector in the form <from:incr:to></td></tr>
<tr><td ID="214">:</td><td>Used in slicing vectors<a id="7595">!</a> and arrays</td></tr>
<tr><td ID="215">.</td><td>Used to access fields of a structure<a id="7539">!</a></td></tr>
<tr><td ID="216">...</td><td>Used to continue<a id="7333">!</a> a MATLAB<a id="7473">!</a> command to the next line</td></tr>
<tr><th>Mathematical Operators</th><th>Description</th></r>
<tr><td>=</td><td>Assignment operator - assigns a value<a id="7574">!</a> to a variable<a id="7589">!</a> (memory location); not the same as an equality test</td></tr>
<tr><td>+</td><td>Scalar and array<a id="7289">!</a> addition</td></tr>
<tr><td>−</td><td>Scalar and array<a id="7290">!</a> subtraction</td></tr>
<tr><td>−</td><td>Unary negation</td></tr>
<tr><td>*</td><td>Matrix multiplication<a id="7489">!</a></td></tr>
<tr><td>.*</td><td>Element-by-element multiplication<a id="7490">!</a></td></tr>
<tr><td>/</td><td>Matrix division<a id="7348">!</a></td></tr>
<tr><td>./</td><td>Element-by-element division<a id="7349">!</a></td></tr>
<tr><td>^</td><td>Matrix exponentiation</td></tr>
<tr><td>.^</td><td>Element-by-element   exponentiation</td></tr>
<tr><th>Logical Operators</th><th>Description</th></r>
<tr><td><</td><td>Less than</td></tr>
<tr><td><=</td><td>Less than or equal to</td></tr>
<tr><td>></td><td>Greater than</td></tr>
<tr><td>>=</td><td>Greater than or equal<a id="7363">!</a> to</td></tr>
<tr><td>==</td><td>Is equal<a id="7364">!</a> to</td></tr>
<tr><td>&<a id="7506">!</a>#126;=</td><td>Is not equal<a id="7365">!</a> to</td></tr>
<tr><td>&<a id="7507">!</a>#126;</td><td>Unary negation</td></tr>
<tr><td>&amp;</td><td>Element-by-element logical<a id="7460">!</a> AND</td></tr>
<tr><td>&amp;&amp;</td><td>Short-circuit logical<a id="7461">!</a> AND (scalar)</td></tr>
<tr><td>|</td><td>Element-by-element logical<a id="7462">!</a> OR<a id="7499">!</a></td></tr>
<tr><td>||</td><td>Short-circuit logical<a id="7463">!</a> OR<a id="7500">!</a> (scalar)</td></tr>
<tr><th>Logical Functions</th><th>Description</th></r>
<tr><td>all(<a id="7282">!</a>a)</td><td>True if all the values in a (a logical<a id="7464">!</a> vector) are true</td></tr>
<tr><td>and(<a id="7283">!</a>a, b)</td><td>True if both a and b are true</td></tr>
<tr><td>any(<a id="7284">!</a>a)</td><td>True if any of the values in a (a logical<a id="7465">!</a> vector) are true</td></tr>
<tr><td>not(a)</td><td>True if a is false<a id="7376">!</a>; false<a id="7377">!</a> if a is true</td></tr>
<tr><td>or(a, b)</td><td>True if either a or b is true</td></tr>
</table>
<br>
<table>
<tr><th style="width="250 pixels">File Input and Output</th><th>Description</th></r>
<tr><td>csvread(<a id="7336">!</a>&lt;file&gt;)</td><td>Read comma-separated text<a id="7560">!</a> files</td></tr>
<tr><td>csvwrite(<a id="7337">!</a>&lt;file&gt;,&lt;data&gt;)</td><td>Write comma-separated text<a id="7561">!</a> files</td></tr>

<tr><td>dlmread (&lt;file&gt;,&lt;dlm&gt;)</td><td>Read text<a id="7562">!</a> files separated by the given delimiting character(s)</td></tr>

<tr><td>dlmwrite(<a id="7350">!</a>&lt;file&gt;,&lt;data&gt;,&lt;dlm&gt;)</td><td>Write text<a id="7563">!</a> files separated by the given delimiting character(s)</td></tr>
<tr><td>fclose(<a id="7382">!</a>&lt;handle&gt;)</td><td>Close a text<a id="7564">!</a> file</td></tr>
<tr><td>fgetl(<a id="7383">!</a>&lt;handle&gt;)</td><td>Read a line omitting the new-line character<a id="7321">!</a></td></tr>
<tr><td>fgets(<a id="7384">!</a>&lt;handle&gt;)</td><td>Read a line including the new-line character<a id="7322">!</a></td></tr>
<tr><td>fh = fopen(<a id="7398">!</a>&lt;name&gt;, &lt;why&gt;)</td><td>Open a text<a id="7565">!</a> file</td></tr>
<tr><td>fprintf(<a id="7416">!</a>&lt;handle&gt;,...)</td><td>Write to the console, or to plain text<a id="7566">!</a> files (when <handle> is present</td></tr>
<tr><td>imread(&lt;&lt;file&gt;)</td><td>Read an image file</td></tr>
<tr><td>imwrite(&lt;&lt;data&gt;,&lt;file&gt;, &lt;format<a id="7411">!</a>&gt;)</td><td>Write an image file</td></tr>

<tr><td>load &lt;file&gt;</td><td>Load the current workspace from a file</td></tr>
<tr><td>save &lt;file&gt;</td><td>Save workspace variables in a file</td></tr>
<tr><td>[tk rest] =	strtok(&lt;str&gt;,&lt;dlm&gt;)</td><td>Extract a token<a id="7573">!</a> from a string and return the remainder of the string</td></tr>

<tr><td>ca = textscan(<a id="7571">!</a>&lt;handle&gt;,&lt;format<a id="7412">!</a>&gt;)</td><td>Acquire and scan a line of text<a id="7567">!</a> according to a specific format<a id="7413">!</a> and save the data in a cell<a id="7314">!</a> array<a id="7291">!</a></td></tr>
<tr><td>[data Fs nb] = wavread(<a id="7599">!</a>&lt;file&gt;</td><td>Read a sound<a id="7524">!</a> file in .wav<a id="7597">!</a> format<a id="7414">!</a></td></tr>
<tr><td>wavwrite(<a id="7600">!</a>&lt;data&gt;,&lt;Fs&gt;,&lt;nb&lt;file&gt;)</td><td>Write a sound<a id="7525">!</a> file in .wav<a id="7598">!</a> format<a id="7415">!</a></td></tr>
<tr><td>[nums, txt,raw] = readcell(<a id="7517">!</a>&lt;file&gt;)</td><td>Read an Excel<a id="7369">!</a> spreadsheet</td></tr>
<tr><td>writecell(<a id="7606">!</a>&lt;file&gt;,&lt;data&gt;,&lt;sheet&gt;,&lt;range&gt;)</td><td>Write an Excel<a id="7370">!</a> <tr><td>[nums, txt,raw] = xlsread(<a id="7608">!</a>&lt;file&gt;)</td><td>Read an Excel<a id="7371">!</a> spreadsheet</td></tr>
<tr><td>xlswrite(<a id="7609">!</a>&lt;file&gt;,&lt;data&gt;,&lt;sheet&gt;,&lt;range&gt;)</td><td>Write an Excel<a id="7372">!</a> spreadsheet in a specific row/column<a id="7332">!</a> range</td></tr>
<tr><th>Format Control</th><th>Description</th></th>
<tr><td>%&lt;m&gt;.&lt;n&gt;e</td><td>	Exponential notation</td></tr>
<tr><td>%&lt;m&gt;.&lt;n&gt;f</td><td>	Fixed point or decimal notation</td></tr>
<tr><td>%&lt;m&gt;.&lt;n&gt;g</td><td>	Fixed point or exponential<a id="7374">!</a> notation</td></tr>
<tr><td>%q</td><td>	A quoted string delimited by double quotes</td></tr>
<tr><td>%<n>s</td><td>	Character string</td></tr>
<tr><td>\b</td><td>	Backspace</td></tr>
<tr><td>\n</td><td>	New Line</td></tr>
<tr><td>\t</td><td>	Tab</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">User Interface
Management</th><th>Description</th></r>

<tr><td>ans</td><td>	Default variable<a id="7590">!</a> name for<a id="7399">!</a> results of calculations</td></tr>
<tr><td>clc<a id="7326">!</a></td><td>Clear the interactions window</td></tr>
<tr><td>clear<a id="7327">!</a> &lt;selection&gt;</td><td>Remove all (or selected) variables from the workspace</td></tr>
<tr><td>clf<a id="7328">!</a></td><td>Clear the current figure</td></tr>
<tr><td>close<a id="7329">!</a> all</td><td>Close all graphics windows<a id="7605">!</a></td></tr>
<tr><td>exit</td><td>Terminate the user interface system</td></tr>
<tr><td>help<a id="7434">!</a> &lt;topic	or function<a id="7420">!</a>&gt;</td><td>Invoke the help<a id="7435">!</a> utility</td></tr>

<tr><td>load &lt;file&gt;</td><td>Load the current workspace from a file</td></tr>
<tr><td>quit</td><td>Terminate the user interface system</td></tr>
<tr><td>save <file></td><td>Save workspace variables in a file</td></tr>
<tr><td>who<a id="7603">!</a></td><td>List variables in the workspace</td></tr>
<tr><td>whos<a id="7604">!</a></td><td>List variables and their sizes</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Special Constants</th><th>Description</th></r>
<tr><td>eps</td><td>	Smallest possible difference between two floating point numbers<a id="7492">!</a></td></tr>
<tr><td>false<a id="7378">!</a></td><td>	Logical false<a id="7379">!</a></td></tr>
<tr><td>inf</td><td>	Infinity</td></tr>
<tr><td>NaN<a id="7491">!</a></td><td>	Not a number</td></tr>
<tr><td>pi</td><td>	Ratio of the circumference of a circle to its diameter</td></tr>
<tr><td>true</td><td>	Logical true</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Basic Mathematical
Functions</th><th>Description</th></r>
<tr><td>abs(x)</td><td>Compute the absolute value<a id="7575">!</a></td></tr>
<tr><td>ceil(<a id="7312">!</a>x)</td><td>Round x to the nearest integer toward positive infinity</td></tr>
<tr><td>cross(<a id="7335">!</a>a, b)</td><td>Vector cross product</td></tr>
<tr><td>exp(x)</td><td>Compute e to the power x</td></tr>
<tr><td>fix(<a id="7396">!</a>x)</td><td>Round x to the nearest integer toward zero</td></tr>
<tr><td>floor(<a id="7397">!</a>x)</td><td>Round x to the nearest integer toward minus infinity</td></tr>
<tr><td>log(x)</td><td>Compute the natural log of x</td></tr>
<tr><td>log10(x)</td><td>Compute the log base 10 of x</td></tr>
<tr><td>mod(x, a)</td><td>Compute the remainder when x is divided by a</td></tr>
<tr><td>rem(x, a)</td><td>Compute the remainder when x is divided by a</td></tr>
<tr><td>round(<a id="7520">!</a>x)</td><td>Round x to the nearest integer</td></tr>
<tr><td>sqrt(x)</td><td>Calculate the square<a id="7529">!</a> root of x</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Trigonometry Functions</th><th>Description</td></tr>
<tr><td>acos(x)</td><td>Compute the inverse cosine (arcsine) of x</td></tr>
<tr><td>asin(x)</td><td>Compute the inverse sine (arcsine) of x</td></tr>
<tr><td>atan(x)</td><td>Compute the inverse tangent (arctan) of x</td></tr>
<tr><td>atan2(y, x)</td><td>Compute the inverse tangent given the x and y values (4 quadrant
resolution<a id="7518">!</a>)</td></tr>
<tr><td>cos(x)</td><td>Compute the cosine of x</td></tr>
<tr><td>sin(x)</td><td>Compute the sine of x</td></tr>
<tr><td>tan(x)</td><td>Compute the tangent of x</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Vector, Array, and Matrix
Functions</th><th>Description</td></tr>
<tr><td>cumsum(<a id="7341">!</a>v)</td><td>Compute a cumulative sum of the values in v</td></tr>
<tr><td>deal(<a id="7342">!</a>...)</td><td>Distribute cell<a id="7315">!</a> array<a id="7292">!</a> results among variables</td></tr>
<tr><td>det(a)</td><td>Compute the determinant of a matrix<a id="7474">!</a></td></tr>
<tr><td>diag(<a id="7343">!</a>a)</td><td>Extract the diagonal<a id="7344">!</a> from a matrix<a id="7475">!</a> or (if provided a is a vector) construct a matrix<a id="7476">!</a> with a as the diagonal<a id="7345">!</a></td></tr>
<tr><td>eye(<a id="7375">!</a>n)</td><td>Generate the identity matrix<a id="7477">!</a> of size n x n</td></tr>
<tr><td>find(<a id="7395">!</a>&lt;logical<a id="7466">!</a> a&gt;)</td><td>Compute a linear<a id="7455">!</a> list of the locations of the true values in a logical<a id="7467">!</a> array<a id="7293">!</a></td></tr>
<tr><td>fliplr(a)</td><td>Flip a matrix<a id="7478">!</a> from left to right</td></tr>
<tr><td>inv(<a id="7444">!</a>a)</td><td>Compute the inverse of a matrix<a id="7479">!</a></td></tr>
<tr><td>length(<a id="7454">!</a>a)</td><td>Determine the largest dimension of an array<a id="7294">!</a></td></tr>
<tr><td>linspace(<a id="7459">!</a>from,to, n)</td><td>Define a linearly spaced vector</td></tr>
<tr><td>magic(<a id="7471">!</a>n)</td><td>Generate a magic square<a id="7530">!</a> of size n x n</td></tr> 
<tr><td>[v,in] = max(<a id="7483">!</a>a)</td><td>Find the maximum value<a id="7576">!</a> and its position in a </td></tr>
<tr><td>mean(<a id="7484">!</a>a)</td><td>Compute the average of the elements<a id="7353">!</a> in a </td></tr>
<tr><td>meshgrid(<a id="7485">!</a>x, y)</td><td>Map each of two vectors<a id="7596">!</a> into separate 2-D arrays</td></tr>
<tr><td>[v,in] = min(<a id="7487">!</a>a)</td><td>Find the minimum<a id="7488">!</a> value<a id="7577">!</a> and its position in a </td></tr>
<tr><td>ones(<a id="7498">!</a>r, c)</td><td>Generate an array<a id="7295">!</a> filled with the value<a id="7578">!</a> 1</td></tr>
<tr><td>prod(x)</td><td>Compute the product of all the items in x</td></tr>
<tr><td>rand(<a id="7515">!</a>r, c)</td><td>Calculate an r x c array<a id="7296">!</a> of evenly distributed random numbers<a id="7493">!</a> in
the range 0 - 1</td></tr>
<tr><td>randi(IMAX,M,N)</td><td>Calculate an M x N array<a id="7297">!</a> of evenly distributed random integers in the range 1..IMAX</td></tr>
<tr><td>randn(<a id="7516">!</a>r, c)</td><td>Calculate an r x c array<a id="7298">!</a> of normally distributed random numbers<a id="7494">!</a> in the range 0 - 1</td></tr>
<tr><td>size(<a id="7522">!</a>a)</td><td>Determine the dimensions of an array<a id="7299">!</a></td></tr>
<tr><td>sparse</td><td>Define a sparse matrix<a id="7480">!</a></td></tr>
<tr><td>[v,in] = sort(<a id="7523">!</a>v)</td><td>Sort the vector v (a vector or a cell<a id="7316">!</a> array<a id="7300">!</a> of strings<a id="7534">!</a>)</td></tr>
<tr><td>sum(<a id="7548">!</a>a)</td><td>Find the sum of an array<a id="7301">!</a></td></tr>
<tr><td>zeros(<a id="7611">!</a>r, c)</td><td>Build an array<a id="7302">!</a> filled with the value<a id="7579">!</a> 0</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">2-D Plotting</th><th>Description</td></tr>
<tr><td>bar</td><td>Generate a bar graph</td></tr>
<tr><td>barh</td><td>Generate a horizontal bar graph</td></tr>
<tr><td>contour</td><td>Generate a contour plot</td></tr>
<tr><td>hist</td><td>Draw a histogram</td></tr>
<tr><td>loglog</td><td>Generate an x-y plot, with both axes scaled logarithmically</td></tr>
<tr><td>pie</td><td>Generate a pie chart</td></tr>
<tr><td>plot</td><td>Create an x-y plot</td></tr>
<tr><td>polar</td><td>Create a polar plot</td></tr>
<tr><td>semilogx</td><td>Generate an x-y plot, with the x-axis scaled logarithmically</td></tr>
<tr><td>semilogy</td><td>Generate an x-y plot, with the y-axis scaled logarithmically</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">3-D Plotting</th><th>Description</td></tr>
<tr><td>bar3</td><td>Generate a 3-D bar graph</td></tr>
<tr><td>barh3</td><td>Generate a horizontal 3-D bar graph</td></tr>
<tr><td>gplot</td><td>Plot a graph</td></tr>
<tr><td>mesh</td><td>Generate a mesh plot of a surface<a id="7549">!</a></td></tr>
<tr><td>meshc</td><td>Generate a mesh plot of a surface<a id="7550">!</a> with contours</td></tr>
<tr><td>meshz</td><td>Generate a mesh plot of a surface<a id="7551">!</a> with a skirt</td></tr>
<tr><td>meshgrid(<a id="7486">!</a>r, c)</td><td>Create a plaid<a id="7508">!</a> for<a id="7400">!</a> 3-D plots<a id="7509">!</a></td></tr>
<tr><td>peaks</td><td>Create a sample matrix<a id="7481">!</a> used to demonstrate graphing functions</td></tr>
<tr><td>pie3</td><td>Generate a 3-D pie chart</td></tr>
<tr><td>plot3</td><td>Generate a 3-D line plot</td></tr>
<tr><td>sphere<a id="7526">!</a></td><td>Example function<a id="7421">!</a> used to demonstrate graphing</td></tr>
<tr><td>surf</td><td>Generate a surface<a id="7552">!</a> plot</td></tr>
<tr><td>surfc</td><td>Generate a combination surface<a id="7553">!</a> and contour plot</td></tr>
<tr><td>waterfall</td><td>Generate a mesh plot of a surface<a id="7554">!</a> with one skirt edge</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Plot Appearance Line
Type Control</th><th>Description</td></tr>
<tr><td>-</td><td>Solid</td></tr>
<tr><td>:</td><td>Dotted</td></tr>
<tr><td>-.</td><td>Dash-dot<a id="7351">!</a></td></tr>
<tr><td>--</td><td>Dashed</td></tr>
<tr><td>.</td><td>Point</td></tr>
<tr><td>o</td><td>Circle</td></tr>
<tr><td>x</td><td>x-mark</td></tr>
<tr><td>+</td><td>Plus</td></tr>
<tr><td>*</td><td>Star</td></tr>
<tr><td>s</td><td>Square</td></tr>
<tr><td>d</td><td>Diamond</td></tr>
<tr><td>v</td><td>Triangle down</td></tr>
<tr><td>^</td><td>Triangle up</td></tr>
<tr><td>&lt;</td><td>Triangle left</td></tr>
<tr><td>&gt;</td><td>Triangle right</td></tr>
<tr><td>p</td><td>Pentagram</td></tr>
<tr><td>h</td><td>Hexagram</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Color Control Character</th><th>Description</td></tr>
<tr><td>b</td><td>Blue</td></tr>
<tr><td>c</td><td>Cyan</td></tr>
<tr><td>g</td><td>Green</td></tr>
<tr><td>k</td><td>Black</td></tr>
<tr><td>m</td><td>Magenta</td></tr>
<tr><td>r</td><td>Red</td></tr>
<tr><td>w</td><td>White</td></tr>
<tr><td>y</td><td>Yellow</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Figure Control</th><th>Description</td></tr>
<tr><td>axis</td><td>Freezes the current axis scaling for<a id="7401">!</a> the current plot or specifies the axis dimensions</td></tr>
<tr><td>figure <n></td><td>Open a new figure window. If present, <n> specifies a figure number</td></tr>
<tr><td>grid<a id="7431">!</a> off/on</td><td>Turn the grid<a id="7432">!</a> off or on</td></tr>
<tr><td>hold<a id="7437">!</a> off/on</td><td>If hold<a id="7438">!</a> is not set, erase figure contents before the next plotting instruction</td></tr>
<tr><td>legend(ca)</td><td>Add a legend to a graph</td></tr>
<tr><td>shading <value></td><td>Shade a surface<a id="7555">!</a> plot with one color<a id="7330">!</a> per grid<a id="7433">!</a> section </td></tr>
<tr><td>subplot(<a id="7547">!</a>plts, n)</td><td>Divide the graphics window up into sections available for<a id="7402">!</a> plotting</td></tr>
<tr><td>text(x,y,str)</td><td>Add text<a id="7568">!</a> to a plot</td></tr>
<tr><td>title(<a id="7572">!</a>str)</td><td>Add a title to a plot</td></tr>
<tr><td>xlabel(<a id="7607">!</a>str)</td><td>Add a label to the x-axis</td></tr>
<tr><td>ylabel(<a id="7610">!</a>str)</td><td>Add a label to the y-axis</td></tr>
<tr><td>zlabel(<a id="7612">!</a>str)</td><td>Add a label to the z-axis</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Color Map Values</th><th>Description</td></tr>
<tr><td>autumn</td><td>yellow, orange, and red colors</td></tr>
<tr><td>bone</td><td>shades of gray</td></tr>
<tr><td>colorcube</td><td>multiple multi-color<a id="7331">!</a> bands</td></tr>
<tr><td>cool</td><td>light blue to purple</td></tr>
<tr><td>copper</td><td>shades of red-brown</td></tr>
<tr><td>flag</td><td>multiple red, white, and blue bands</td></tr>
<tr><td>hot</td><td>deep red through orange to white</td></tr>
<tr><td>hsv</td><td>single spectrum from red to purple</td></tr>
<tr><td>jet</td><td>default) rainbow from blue to red</td></tr>
<tr><td>pink</td><td>from dark to light pink</td></tr>
<tr><td>prism</td><td>multiple bands of spectrum colors</td></tr>
<tr><td>spring</td><td>from purple to yellow</td></tr>
<tr><td>summer</td><td>from dark green to yellow</td></tr>
<tr><td>white</td><td>all white</td></tr>
<tr><td>winter</td><td>from dark blue to light green</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">String Operations</th><th>Description</td></tr>
<tr><td>disp(<a id="7347">!</a>...)</td><td>Display matrix<a id="7482">!</a> or text<a id="7569">!</a></td></tr>
<tr><td>fprintf(<a id="7417">!</a>...)</td><td>Print formatted information</td></tr>
<tr><td>input(...)</td><td>Prompt the user to enter a value<a id="7580">!</a> and parse the result</td></tr>
<tr><td>int2str(<a id="7443">!</a>a)</td><td>Convert an integer to its numerical<a id="7495">!</a> representation</td></tr>
<tr><td>num2str(<a id="7497">!</a>a,n)</td><td>Convert a number to its numerical<a id="7496">!</a> representation with n
decimal places</td></tr>
<tr><td>sprintf(<a id="7528">!</a>...)</td><td>Format a string result</td></tr>
<tr><td>sscanf(<a id="7531">!</a>...)</td><td>Formatted input conversion</td></tr>
<tr><td>strcmp(<a id="7532">!</a>s1, s2)</td><td>Compare two strings<a id="7535">!</a> - returns true if equal<a id="7366">!</a></td></tr>
<tr><td>strcmpi(<a id="7533">!</a>s1, s2)</td><td>Compare two strings<a id="7536">!</a> without regard to case<a id="7308">!</a> - returns true if equal<a id="7367">!</a></td></tr>
<tr><td>textscan</td><td>Scan a text<a id="7570">!</a> string</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Time-Related Functions</th><th>Description</td></tr>
<tr><td>clock</td><td>Determine the current time on the CPU clock</td></tr>
<tr><td>etime</td><td>Find elapsed time</td></tr>
<tr><td>pause</td><td>Pause the execution<a id="7373">!</a> of a program<a id="7514">!</a>, either until any key is hit or for<a id="7403">!</a> a specified number of seconds</td></tr>
<tr><td>tic</td><td>Start a timing sequence</td></tr>
<tr><td>toc</td><td>Stop a timing sequence and return the elapsed time</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Numerical Methods</th><th>Description</td></tr>
<tr><td>diff(<a id="7346">!</a>v)</td><td>Compute the differences between adjacent values in a vector</td></tr>
<tr><td>interp1</td><td>Compute linear<a id="7456">!</a> and cubic<a id="7338">!</a> interpolation<a id="7439">!</a></td></tr>
<tr><td>interp2</td><td>Compute linear<a id="7457">!</a> and cubic<a id="7339">!</a> interpolation<a id="7440">!</a></td></tr>
<tr><td>interp3</td><td>Compute linear<a id="7458">!</a> and cubic<a id="7340">!</a> interpolation<a id="7441">!</a> </td></tr>
<tr><td>polyfit(<a id="7510">!</a>x, y, n)</td><td>Compute a least-squares polynomial<a id="7511">!</a> </td></tr>
<tr><td>polyval(<a id="7513">!</a>c, x)</td><td>Evaluate a polynomial<a id="7512">!</a></td></tr>
<tr><td>spline(<a id="7527">!</a>x, y)</td><td>Spline interpolation<a id="7442">!</a></td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Program Control</th><th>Description</td></tr>
<tr><td>break<a id="7307">!</a></td><td>A command within a loop module that forces<a id="7409">!</a> control to the statement following the innermost loop</td></tr>
<tr><td>case<a id="7309">!</a></td><td>A specific value<a id="7581">!</a> alternative within a switch<a id="7556">!</a> statement</td></tr>
<tr><td>catch<a id="7310">!</a></td><td>End of a suspect code block where the exception is trapped</td></tr>
<tr><td>continue<a id="7334">!</a></td><td>Skip to the end<a id="7359">!</a> of the innermost loop, but remains inside it</td></tr>
<tr><td>else<a id="7355">!</a></td><td>Within an if statement, begin the code block executed when the condition is false<a id="7380">!</a></td></tr>
<tr><td>elseif<a id="7356">!</a></td><td>Within an if statement, begin a subsequent test when the result of
&lt;expression&gt;	the previous test is false<a id="7381">!</a></td></tr>
<tr><td>end<a id="7360">!</a></td><td>Terminate a function<a id="7422">!</a> specification or an if, switch<a id="7557">!</a>, for<a id="7404">!</a>, while<a id="7601">!</a>, or catch<a id="7311">!</a> block.</td></tr>
<tr><td>end<a id="7361">!</a></td><td>When indexing, the value<a id="7582">!</a> of the last element in an index vector</td></tr>
<tr><td>for<a id="7405">!</a> var = v</td><td>A code block repeated as many times as there are elements<a id="7354">!</a> in the
vector v</td></tr>
<tr><td>function<a id="7423">!</a></td><td>Identify an m-file as a function<a id="7424">!</a> or begin a helper<a id="7436">!</a> function<a id="7425">!</a> within a
function<a id="7426">!</a> file</td></tr>
<tr><td>error(<a id="7368">!</a>str)</td><td>Throw an exception to announce an error with the string provided</td></tr>
<tr><td>global<a id="7430">!</a> var</td><td>Define a variable<a id="7591">!</a> as globally accessible</td></tr>
<tr><td>if &lt;expression&gt;</td><td>Begin a conditional module—the following code block is executed if the logical<a id="7468">!</a> expression is true</td></tr>
<tr><td>lasterror</td><td>Provide a structure<a id="7540">!</a> describing the environment from which an
exception was thrown</td></tr>
<tr><td>nargin</td><td>Determine the number of input parameters<a id="7503">!</a> actually supplied by a function<a id="7427">!</a>'s caller</td></tr>
<tr><td>nargout</td><td>Determine the number of output parameters<a id="7504">!</a> actually requested by a function<a id="7428">!</a>'s caller</td></tr>
<tr><td>otherwise</td><td>Catch-all code block at the end<a id="7362">!</a> of a switch<a id="7558">!</a> statement</td></tr>
<tr><td>switch<a id="7559">!</a> &lt;variable<a id="7592">!</a>&gt;</td><td>Begin a code module selecting specific values of the variable<a id="7593">!</a>>(must be countable)</td></tr>
<tr><td>try</td><td>Begin a block of suspect code from which an exception might be thrown
<tr><td>while<a id="7602">!</a> &lt;expression&gt;</td><td>A code module repeated as long as the logical<a id="7469">!</a> expression is true</td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Data Class Operations</th><th>Description</td></tr>
<tr><td>char(<a id="7319">!</a>...)</td><td>Cast to a character<a id="7323">!</a> type </td></tr>
<tr><td>class(<a id="7325">!</a>&lt;object&gt;)</td><td>Determine the data type of an <tr><td>object </td></tr>
<tr><td>double(<a id="7352">!</a>a)</td><td>Cast a to type double</td></tr>
<tr><td>int8/16/32/64(a)</td><td>Cast a to integer type with the specified number of bits<a id="7305">!</a> </td></tr>
<tr><td>uint8/16/32/64(a)</td><td>Cast a to unsigned integer type with the specified number of bits<a id="7306">!</a> </td></tr>
<tr><td>isa(<a id="7445">!</a>obj, str)</td><td>Test for<a id="7406">!</a> a given data type</td></tr>
<tr><td>ischar(<a id="7447">!</a>ch)</td><td>Determine whether the given object is of type char iscell(<a id="7446">!</a>...)	Determine whether the given object is a cell<a id="7317">!</a> </td></tr>
<tr><td>isempty(<a id="7448">!</a>a)</td><td>Test for<a id="7407">!</a> the empty<a id="7358">!</a> vector [ ]</td></tr>
<tr><td>islogical(<a id="7450">!</a>a)</td><td>Determine whether the given object is of type logical<a id="7470">!</a> </td></tr>
<tr><td>isnumeric(<a id="7451">!</a>a)</td><td>Determine whether the given object is of type double </td></tr>
<tr><td>isspace(<a id="7452">!</a>a)</td><td>Test for<a id="7408">!</a> the space character<a id="7324">!</a></td></tr>
<tr><td>isstruct(<a id="7453">!</a>a)</td><td>Determine whether the given object is a structure<a id="7541">!</a></td></tr>
</table>
<table>
<tr><th style="width="250 pixels">Structure Operations</th><th>Description</td></tr>
<tr><td>fieldnames(<a id="7394">!</a>str)</td><td>Return a cell<a id="7318">!</a> array<a id="7303">!</a> containing strings<a id="7537">!</a> that are the names of the fields in the structure<a id="7542">!</a></td></tr>
<tr><td>getfield(<a id="7429">!</a>str,field<a id="7386">!</a>)</td><td>Extract the value<a id="7583">!</a> of the field<a id="7387">!</a></td></tr>

<tr><td>isfield(<a id="7449">!</a>str, field<a id="7388">!</a>)</td><td>Return true if the string is a field<a id="7389">!</a> in the specified structure<a id="7543">!</a></td></tr>
<tr><td>str = rmfield(<a id="7519">!</a>str, field<a id="7390">!</a>)</td><td>Return a copy of the given structure<a id="7544">!</a> with the given field<a id="7391">!</a> removed</td></tr>

<tr><td>str = setfield(<a id="7521">!</a>str, field<a id="7392">!</a>,value<a id="7584">!</a>)</td><td>Construct a structure<a id="7545">!</a> in which the value<a id="7585">!</a> of the field<a id="7393">!</a> has been changed to the given value<a id="7586">!</a></td></tr>

<tr><td>struct(...)</td><td>Construct a structure<a id="7546">!</a> from <fieldname> <value> pairs of
parameters<a id="7505">!</a></td></tr>
</table>

 </div>


</body>
</html>


